if exists (select * from sys.objects where name='sp_SaveInitialApplication' and type='P')
	drop procedure Common.sp_SaveInitialApplication
GO

create procedure Common.sp_SaveInitialApplication(
	@SOURCE_ID					tinyint,
	@LOAN_TYPE_ID				char(2),
	@FIRST_NAME					nvarchar(20)	= null,
	@LAST_NAME					nvarchar(20)	= null,
	@PATRONYMIC_NAME			nvarchar(20)	= null,
	@BIRTH_DATE					date			= null,
	@SOCIAL_CARD_NUMBER			char(10),
	@DOCUMENT_TYPE_CODE			char(1)			= null,
	@DOCUMENT_NUMBER			char(9)			= null,
	@DOCUMENT_GIVEN_BY			char(3)			= null,
	@DOCUMENT_GIVEN_DATE		date			= null,
	@DOCUMENT_EXPIRY_DATE		date			= null,
	@INITIAL_AMOUNT				money			= null,
	@CURRENCY_CODE				char(3)			= null,
	@ORGANIZATION_ACTIVITY_CODE	char(2)			= null,
	@MOBILE_PHONE_1				varchar(20) 	= null,
	@CUSTOMER_USER_ID			int				= null,
	@SHOP_USER_ID				int				= null,
	@PARTNER_COMPANY_CODE		varchar(8)		= null,
	@PRODUCT_CATEGORY_CODE		char(2)			= null,
	@LOAN_TEMPLATE_CODE			char(4)			= null,
	@OPERATION_DETAILS			nvarchar(max),
	@IS_REFINANCING				bit = 0,
	@ID							uniqueidentifier	output,
	@IS_SUBMIT					bit,
	@COBORROWER_SOCIAL_CARD_NUMBER	char(10) = NULL,
	@COBORROWER_FIRST_NAME			nvarchar(20) = NULL,
	@COBORROWER_LAST_NAME			nvarchar(20) = NULL,
	@COBORROWER_BIRTH_DATE			date = NULL,
	@COBORROWER_FIRST_NAME_EN		varchar(20) = NULL,
	@COBORROWER_LAST_NAME_EN		varchar(20) = NULL,
	@COBORROWER_MOBILE_PHONE		varchar(20) = NULL,
	@COBORROWER_EMAIL				varchar(70) = NULL,
	@COBORROWER_BIRTH_PLACE_CODE	char(2) = NULL,
	@COBORROWER_CITIZENSHIP_CODE	char(2) = NULL,
	@SKIP_OTI						bit = NULL,
	@UNIVERSITY_CODE				char(2) = NULL,
	@UNIVERSITY_FACULTY				nvarchar(50) = NULL,
	@UNIVERSITY_YEAR				nvarchar(50) = NULL
)
AS
	BEGIN TRANSACTION

	BEGIN TRY
		declare @OldID uniqueidentifier = @ID
		if not @OldID is null
			delete from Common.APPLICATION where ID = @OldID

		set @ID = newid()
		insert into Common.APPLICATION
			(CREATION_DATE, ID, SOURCE_ID, LOAN_TYPE_ID, STATUS, INITIAL_AMOUNT, CURRENCY_CODE, CUSTOMER_USER_ID, SHOP_USER_ID, PARTNER_COMPANY_CODE, TO_BE_SYNCHRONIZED
				,FIRST_NAME, LAST_NAME, PATRONYMIC_NAME, BIRTH_DATE, SOCIAL_CARD_NUMBER, ORGANIZATION_ACTIVITY_CODE, MOBILE_PHONE_1
				,DOCUMENT_TYPE_CODE, DOCUMENT_NUMBER,DOCUMENT_GIVEN_BY, DOCUMENT_GIVEN_DATE, DOCUMENT_EXPIRY_DATE, PRODUCT_CATEGORY_CODE, LOAN_TEMPLATE_CODE
				,IS_REFINANCING,COBORROWER_SOCIAL_CARD_NUMBER,COBORROWER_FIRST_NAME,COBORROWER_LAST_NAME,COBORROWER_BIRTH_DATE,COBORROWER_FIRST_NAME_EN,COBORROWER_LAST_NAME_EN
				,COBORROWER_MOBILE_PHONE,COBORROWER_EMAIL,COBORROWER_BIRTH_PLACE_CODE,COBORROWER_CITIZENSHIP_CODE
				,SKIP_OTI,UNIVERSITY_CODE,UNIVERSITY_FACULTY,UNIVERSITY_YEAR)
		values
			(getdate(), @ID, @SOURCE_ID, @LOAN_TYPE_ID, case @IS_SUBMIT when 1 then 1 else 0 end, @INITIAL_AMOUNT, @CURRENCY_CODE, @CUSTOMER_USER_ID, @SHOP_USER_ID, @PARTNER_COMPANY_CODE, 1
				,@FIRST_NAME, @LAST_NAME, @PATRONYMIC_NAME, @BIRTH_DATE, @SOCIAL_CARD_NUMBER, @ORGANIZATION_ACTIVITY_CODE, @MOBILE_PHONE_1
				,@DOCUMENT_TYPE_CODE, @DOCUMENT_NUMBER, @DOCUMENT_GIVEN_BY, @DOCUMENT_GIVEN_DATE, @DOCUMENT_EXPIRY_DATE, @PRODUCT_CATEGORY_CODE, @LOAN_TEMPLATE_CODE
				,@IS_REFINANCING,@COBORROWER_SOCIAL_CARD_NUMBER,@COBORROWER_FIRST_NAME,@COBORROWER_LAST_NAME,@COBORROWER_BIRTH_DATE,@COBORROWER_FIRST_NAME_EN,@COBORROWER_LAST_NAME_EN
				,@COBORROWER_MOBILE_PHONE,@COBORROWER_EMAIL,@COBORROWER_BIRTH_PLACE_CODE,@COBORROWER_CITIZENSHIP_CODE
				,@SKIP_OTI,@UNIVERSITY_CODE,@UNIVERSITY_FACULTY,@UNIVERSITY_YEAR)

		if not @OldID is null
			update Common.APPLICATION_SCAN
			set APPLICATION_ID = @ID
			where APPLICATION_ID = @OldID

		if not @CUSTOMER_USER_ID is null
			update Common.CUSTOMER_USER set
				 FIRST_NAME					=	@FIRST_NAME
				,LAST_NAME					=	@LAST_NAME
				,PATRONYMIC_NAME			=	@PATRONYMIC_NAME
				,BIRTH_DATE					=	@BIRTH_DATE
				,ORGANIZATION_ACTIVITY_CODE	=	@ORGANIZATION_ACTIVITY_CODE
				,SOCIAL_CARD_NUMBER			=	@SOCIAL_CARD_NUMBER
				,DOCUMENT_TYPE_CODE			=	@DOCUMENT_TYPE_CODE
				,DOCUMENT_NUMBER			=	@DOCUMENT_NUMBER
				,DOCUMENT_GIVEN_BY			=	@DOCUMENT_GIVEN_BY
				,DOCUMENT_GIVEN_DATE		=	@DOCUMENT_GIVEN_DATE
				,DOCUMENT_EXPIRY_DATE		=	@DOCUMENT_EXPIRY_DATE
			where APPLICATION_USER_ID = @CUSTOMER_USER_ID

			insert into Common.APPLICATION_OPERATION_LOG
				(CUSTOMER_USER_ID, SHOP_USER_ID, PARTNER_COMPANY_CODE, LOAN_TYPE_ID, OPERATION_CODE, APPLICATION_ID, OPERATION_DETAILS)
			values
				(@CUSTOMER_USER_ID, @SHOP_USER_ID, @PARTNER_COMPANY_CODE, @LOAN_TYPE_ID, 'CREATE', @ID, @OPERATION_DETAILS)

		COMMIT TRANSACTION
	END TRY
	BEGIN CATCH
		ROLLBACK TRANSACTION
		declare @ErrorMessage nvarchar(4000) = ERROR_MESSAGE()
		RAISERROR (@ErrorMessage, 17, 1)
		RETURN
	END CATCH
GO
