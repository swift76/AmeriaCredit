if exists (select * from sys.objects where name='sp_ModifyCustomerUser' and type='P')
	drop procedure Common.sp_ModifyCustomerUser
GO

create procedure Common.sp_ModifyCustomerUser (
	@APPLICATION_USER_ID		int,
	@FIRST_NAME_EN				varchar(20) = null,
	@LAST_NAME_EN				varchar(20) = NULL,
	@FIRST_NAME					nvarchar(20) = NULL,
	@LAST_NAME					nvarchar(20) = NULL,
	@PATRONYMIC_NAME			nvarchar(20) = NULL,
	@BIRTH_DATE					date		 = NULL,
	@BIRTH_PLACE_CODE			char(2)		 = NULL,
	@CITIZENSHIP_CODE			char(2)		 = NULL,
	@MOBILE_PHONE				varchar(20)	 = NULL,
	@EMAIL						varchar(70)	 = NULL,
	@SOCIAL_CARD_NUMBER			char(10)	 = NULL,
	@DOCUMENT_TYPE_CODE			char(1)		 = NULL,
	@DOCUMENT_NUMBER			char(9)		 = NULL,
	@DOCUMENT_GIVEN_DATE		date		 = NULL,
	@DOCUMENT_EXPIRY_DATE		date		 = NULL,
	@DOCUMENT_GIVEN_BY			char(3)		 = NULL,
	@REGISTRATION_COUNTRY_CODE	char(2)		 = NULL,
	@REGISTRATION_STATE_CODE	char(3)		 = NULL,
	@REGISTRATION_CITY_CODE		char(9)		 = NULL,
	@REGISTRATION_STREET		nvarchar(150) = NULL,
	@REGISTRATION_BUILDNUM		nvarchar(30) = NULL,
	@REGISTRATION_APARTMENT		nvarchar(30) = NULL,
	@CURRENT_COUNTRY_CODE		char(2)		 = NULL,
	@CURRENT_STATE_CODE			char(3)		 = NULL,
	@CURRENT_CITY_CODE			char(9)		 = NULL,
	@CURRENT_STREET				nvarchar(150) = NULL,
	@CURRENT_BUILDNUM			nvarchar(30) = NULL,
	@CURRENT_APARTMENT			nvarchar(30) = NULL,
	@OPERATION_DETAILS			nvarchar(max)
)

AS
	BEGIN TRANSACTION

	BEGIN TRY

		insert into IL.BANK_APPLICATION_OPERATION_LOG
			(APPLICATION_USER_ID, BANK_OBJECT_CODE, BANK_OPERATION_CODE, ENTITY_ID, OPERATION_DETAILS)
		values
			(@APPLICATION_USER_ID,'CUSTOMERUSER', 'EDIT', @APPLICATION_USER_ID, @OPERATION_DETAILS)

		update Common.APPLICATION_USER set
			LOGIN		= isnull(@MOBILE_PHONE,	LOGIN),
			FIRST_NAME	= isnull(@FIRST_NAME,	FIRST_NAME),
			LAST_NAME	= isnull(@LAST_NAME,	LAST_NAME),
			EMAIL		= isnull(@EMAIL,		EMAIL)
		where ID = @APPLICATION_USER_ID

		update Common.CUSTOMER_USER set
			FIRST_NAME					= isnull(@FIRST_NAME,					FIRST_NAME),
			LAST_NAME					= isnull(@LAST_NAME,					LAST_NAME),
			PATRONYMIC_NAME				= isnull(@PATRONYMIC_NAME,				PATRONYMIC_NAME),
			FIRST_NAME_EN				= isnull(@FIRST_NAME_EN,				FIRST_NAME_EN),
			LAST_NAME_EN				= isnull(@LAST_NAME_EN,					LAST_NAME_EN),
			BIRTH_DATE					= isnull(@BIRTH_DATE,					BIRTH_DATE),
			BIRTH_PLACE_CODE			= isnull(@BIRTH_PLACE_CODE,				BIRTH_PLACE_CODE),
			CITIZENSHIP_CODE			= isnull(@CITIZENSHIP_CODE,				CITIZENSHIP_CODE),
			MOBILE_PHONE				= isnull(@MOBILE_PHONE,					MOBILE_PHONE),
			EMAIL						= isnull(@EMAIL,						EMAIL),
			SOCIAL_CARD_NUMBER			= isnull(@SOCIAL_CARD_NUMBER,			SOCIAL_CARD_NUMBER),
			DOCUMENT_TYPE_CODE			= isnull(@DOCUMENT_TYPE_CODE,			DOCUMENT_TYPE_CODE),
			DOCUMENT_NUMBER				= isnull(@DOCUMENT_NUMBER,				DOCUMENT_NUMBER),
			DOCUMENT_GIVEN_DATE			= isnull(@DOCUMENT_GIVEN_DATE,			DOCUMENT_GIVEN_DATE),
			DOCUMENT_EXPIRY_DATE		= isnull(@DOCUMENT_EXPIRY_DATE,			DOCUMENT_EXPIRY_DATE),
			DOCUMENT_GIVEN_BY			= isnull(@DOCUMENT_GIVEN_BY,			DOCUMENT_GIVEN_BY),
			REGISTRATION_COUNTRY_CODE 	= isnull(@REGISTRATION_COUNTRY_CODE,	REGISTRATION_COUNTRY_CODE),
			REGISTRATION_STATE_CODE		= isnull(@REGISTRATION_STATE_CODE,		REGISTRATION_STATE_CODE),
			REGISTRATION_CITY_CODE		= isnull(@REGISTRATION_CITY_CODE,		REGISTRATION_CITY_CODE),
			REGISTRATION_STREET 		= isnull(@REGISTRATION_STREET, 			REGISTRATION_STREET),
			REGISTRATION_BUILDNUM		= isnull(@REGISTRATION_BUILDNUM,		REGISTRATION_BUILDNUM),
			REGISTRATION_APARTMENT		= isnull(@REGISTRATION_APARTMENT,		REGISTRATION_APARTMENT),
			CURRENT_COUNTRY_CODE 		= isnull(@CURRENT_COUNTRY_CODE,			CURRENT_COUNTRY_CODE),
			CURRENT_STATE_CODE			= isnull(@CURRENT_STATE_CODE,			CURRENT_STATE_CODE),
			CURRENT_CITY_CODE			= isnull(@CURRENT_CITY_CODE,			CURRENT_CITY_CODE),
			CURRENT_STREET 				= isnull(@CURRENT_STREET, 				CURRENT_STREET),
			CURRENT_BUILDNUM			= isnull(@CURRENT_BUILDNUM,				CURRENT_BUILDNUM),
			CURRENT_APARTMENT			= isnull(@CURRENT_APARTMENT,			CURRENT_APARTMENT)
		where APPLICATION_USER_ID = @APPLICATION_USER_ID

		COMMIT TRANSACTION
	END TRY
	BEGIN CATCH
		ROLLBACK TRANSACTION
		declare @ErrorMessage nvarchar(4000) = ERROR_MESSAGE()
		RAISERROR (@ErrorMessage, 17, 1)
	END CATCH
GO
