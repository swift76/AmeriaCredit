if exists (select * from sys.objects where name='sp_SaveCompletedApplicationFromBank' and type='P')
	drop procedure Common.sp_SaveCompletedApplicationFromBank
GO

create procedure Common.sp_SaveCompletedApplicationFromBank(
		@APPLICATION_ID 			uniqueidentifier,
		@INTEREST					money,
		@FINAL_AMOUNT				money,
		@PERIOD_TYPE_CODE			char(3),
		@REPAY_DAY					tinyint,
		@FIRST_NAME_EN				varchar(20),
		@LAST_NAME_EN				varchar(20),
		@MOBILE_PHONE_1				varchar(20) = null,
		@MOBILE_PHONE_2				varchar(20) = null,
		@FIXED_PHONE				varchar(20) = null,
		@EMAIL						varchar(70) = null,
		@GENDER_CODE				char(1),
		@BIRTH_PLACE_CODE			char(2),
		@CITIZENSHIP_CODE			char(2),
		@REGISTRATION_COUNTRY		char(2),
		@REGISTRATION_DISTRICT		char(3),
		@REGISTRATION_CITY			nvarchar(30) = null,
		@REGISTRATION_STREET		nvarchar(150) = null,
		@REGISTRATION_BUILDNUM		nvarchar(30) = null,
		@REGISTRATION_APARTMENT		nvarchar(30) = null,
		@CURRENT_COUNTRY			char(2),
		@CURRENT_DISTRICT			char(3),
		@CURRENT_CITY				nvarchar(30) = null,
		@CURRENT_STREET				nvarchar(150) = null,
		@CURRENT_BUILDNUM			nvarchar(30) = null,
		@CURRENT_APARTMENT			nvarchar(30) = null,
		@COMPANY_NAME				nvarchar(40) = null,
		@COMPANY_PHONE				varchar(20) = null,
		@POSITION					nvarchar(50) = null,
		@MONTHLY_INCOME_CODE		char(1) = null,
		@WORKING_EXPERIENCE_CODE	char(1)	= null,
		@FAMILY_STATUS_CODE			char(1)	= null)

AS
	BEGIN TRANSACTION

	BEGIN TRY
		declare @STATUS tinyint, @IMPORT_ID int
		select @STATUS = STATUS, @IMPORT_ID = IMPORT_ID from Common.APPLICATION with (updlock) where ID = @APPLICATION_ID

		if not @STATUS in (5, 8)
			RAISERROR (N'Հայտը տվյալների լրացման կարգավիճակում չէ', 17, 1)

		delete from Common.COMPLETED_APPLICATION where APPLICATION_ID = @APPLICATION_ID
		insert into Common.COMPLETED_APPLICATION
			(APPLICATION_ID, INTEREST,FINAL_AMOUNT,PERIOD_TYPE_CODE,REPAY_DAY,FIRST_NAME_EN,LAST_NAME_EN,MOBILE_PHONE_1,MOBILE_PHONE_2,FIXED_PHONE,EMAIL,BIRTH_PLACE_CODE,CITIZENSHIP_CODE
				,REGISTRATION_COUNTRY_CODE,REGISTRATION_STATE_CODE,REGISTRATION_CITY_CODE,REGISTRATION_STREET,REGISTRATION_BUILDNUM,REGISTRATION_APARTMENT
				,CURRENT_COUNTRY_CODE,CURRENT_STATE_CODE,CURRENT_CITY_CODE,CURRENT_STREET,CURRENT_BUILDNUM,CURRENT_APARTMENT
				,COMPANY_NAME,COMPANY_PHONE,POSITION,MONTHLY_INCOME_CODE,WORKING_EXPERIENCE_CODE,FAMILY_STATUS_CODE)
		values
			(@APPLICATION_ID, @INTEREST,@FINAL_AMOUNT,@PERIOD_TYPE_CODE,@REPAY_DAY,@FIRST_NAME_EN,@LAST_NAME_EN,@MOBILE_PHONE_1,@MOBILE_PHONE_2,@FIXED_PHONE,@EMAIL,@BIRTH_PLACE_CODE,@CITIZENSHIP_CODE
				,@REGISTRATION_COUNTRY,@REGISTRATION_DISTRICT,@REGISTRATION_CITY,Common.ahf_ANSI2Unicode(@REGISTRATION_STREET),Common.ahf_ANSI2Unicode(@REGISTRATION_BUILDNUM),Common.ahf_ANSI2Unicode(@REGISTRATION_APARTMENT)
				,@CURRENT_COUNTRY,@CURRENT_DISTRICT,@CURRENT_CITY,Common.ahf_ANSI2Unicode(@CURRENT_STREET),Common.ahf_ANSI2Unicode(@CURRENT_BUILDNUM),Common.ahf_ANSI2Unicode(@CURRENT_APARTMENT)
				,Common.ahf_ANSI2Unicode(@COMPANY_NAME),@COMPANY_PHONE,Common.ahf_ANSI2Unicode(@POSITION),@MONTHLY_INCOME_CODE,@WORKING_EXPERIENCE_CODE,@FAMILY_STATUS_CODE)

		if @IMPORT_ID>0
			update Common.APPLICATION
				set STATUS=16,TO_BE_SYNCHRONIZED=1
			where IMPORT_ID=@IMPORT_ID and ID<>@APPLICATION_ID

		COMMIT TRANSACTION
	END TRY
	BEGIN CATCH
		ROLLBACK TRANSACTION
		declare @ErrorMessage nvarchar(4000) = ERROR_MESSAGE()
		RAISERROR (@ErrorMessage, 17, 1)
	END CATCH
GO
