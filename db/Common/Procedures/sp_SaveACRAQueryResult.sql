if exists (select * from sys.objects where name='sp_SaveACRAQueryResult' and type='P')
	drop procedure Common.sp_SaveACRAQueryResult
GO

create procedure Common.sp_SaveACRAQueryResult(
	@APPLICATION_ID	uniqueidentifier,
	@FICO_SCORE		char(3),
	@RESPONSE_XML	nvarchar(max),
	@DETAILS		Common.ACRAQueryResultDetails		readonly,
	@QUERIES		Common.ACRAQueryResultQueries		readonly,
	@INTERRELATED	Common.ACRAQueryResultInterrelated	readonly,

	@COBORROWER_FICO_SCORE		char(3) = null,
	@COBORROWER_RESPONSE_XML	nvarchar(max) = null,
	@COBORROWER_DETAILS			Common.ACRAQueryResultDetails		readonly,
	@COBORROWER_QUERIES			Common.ACRAQueryResultQueries		readonly,
	@COBORROWER_INTERRELATED	Common.ACRAQueryResultInterrelated	readonly
)
AS
	BEGIN TRANSACTION
	BEGIN TRY
		declare @CURRENT_STATUS tinyint

		select @CURRENT_STATUS = STATUS from Common.APPLICATION with (updlock) where ID = @APPLICATION_ID

		if @CURRENT_STATUS <> 2
			RAISERROR (N'Հայտի կարգավիճակն արդեն փոփոխվել է', 17, 1)

		insert into Common.ACRA_QUERY_RESULT
			(APPLICATION_ID,FICO_SCORE,RESPONSE_XML)
		values
			(@APPLICATION_ID,@FICO_SCORE,@RESPONSE_XML)

		delete from Common.ACRA_QUERY_RESULT_DETAILS where APPLICATION_ID=@APPLICATION_ID
		insert into Common.ACRA_QUERY_RESULT_DETAILS
			(APPLICATION_ID,STATUS,FROM_DATE,TO_DATE,TYPE,CUR,CONTRACT_AMOUNT,DEBT,PAST_DUE_DATE,RISK,CLASSIFICATION_DATE,
				INTEREST_RATE,PLEDGE,PLEDGE_AMOUNT,OUTSTANDING_AMOUNT,OUTSTANDING_PERCENT,BANK_NAME,IS_GUARANTEE,
				DUE_DAYS_1,DUE_DAYS_2,DUE_DAYS_3,DUE_DAYS_4,LOAN_ID)
		select @APPLICATION_ID,STATUS,FROM_DATE,TO_DATE,TYPE,CUR,CONTRACT_AMOUNT,DEBT,PAST_DUE_DATE,RISK,CLASSIFICATION_DATE,
				INTEREST_RATE,PLEDGE,PLEDGE_AMOUNT,OUTSTANDING_AMOUNT,OUTSTANDING_PERCENT,BANK_NAME,IS_GUARANTEE,
				DUE_DAYS_1,DUE_DAYS_2,DUE_DAYS_3,DUE_DAYS_4,LOAN_ID
			from @DETAILS

		delete from Common.ACRA_QUERY_RESULT_QUERIES where APPLICATION_ID=@APPLICATION_ID
		insert into Common.ACRA_QUERY_RESULT_QUERIES
			(APPLICATION_ID,DATE,BANK_NAME)
		select @APPLICATION_ID,DATE,BANK_NAME
			from @QUERIES

		delete from Common.ACRA_QUERY_RESULT_INTERRELATED where APPLICATION_ID=@APPLICATION_ID
		insert into Common.ACRA_QUERY_RESULT_INTERRELATED
			(APPLICATION_ID,FROM_DATE,TO_DATE,CUR,RISK,CONTRACT_AMOUNT,DUE_AMOUNT,OVERDUE_AMOUNT,OUTSTANDING_PERCENT)
		select @APPLICATION_ID,FROM_DATE,TO_DATE,CUR,RISK,CONTRACT_AMOUNT,DUE_AMOUNT,OVERDUE_AMOUNT,OUTSTANDING_PERCENT
			from @INTERRELATED

		if rtrim(isnull(@COBORROWER_RESPONSE_XML,''))<>''
		begin
			insert into Common.ACRA_COBORROWER_QUERY_RESULT
				(APPLICATION_ID,FICO_SCORE,RESPONSE_XML)
			values
				(@APPLICATION_ID,@COBORROWER_FICO_SCORE,@COBORROWER_RESPONSE_XML)

			delete from Common.ACRA_COBORROWER_QUERY_RESULT_DETAILS where APPLICATION_ID=@APPLICATION_ID
			insert into Common.ACRA_COBORROWER_QUERY_RESULT_DETAILS
				(APPLICATION_ID,STATUS,FROM_DATE,TO_DATE,TYPE,CUR,CONTRACT_AMOUNT,DEBT,PAST_DUE_DATE,RISK,CLASSIFICATION_DATE,
					INTEREST_RATE,PLEDGE,PLEDGE_AMOUNT,OUTSTANDING_AMOUNT,OUTSTANDING_PERCENT,BANK_NAME,IS_GUARANTEE,
					DUE_DAYS_1,DUE_DAYS_2,DUE_DAYS_3,DUE_DAYS_4,LOAN_ID)
			select @APPLICATION_ID,STATUS,FROM_DATE,TO_DATE,TYPE,CUR,CONTRACT_AMOUNT,DEBT,PAST_DUE_DATE,RISK,CLASSIFICATION_DATE,
					INTEREST_RATE,PLEDGE,PLEDGE_AMOUNT,OUTSTANDING_AMOUNT,OUTSTANDING_PERCENT,BANK_NAME,IS_GUARANTEE,
					DUE_DAYS_1,DUE_DAYS_2,DUE_DAYS_3,DUE_DAYS_4,LOAN_ID
				from @COBORROWER_DETAILS

			delete from Common.ACRA_COBORROWER_QUERY_RESULT_QUERIES where APPLICATION_ID=@APPLICATION_ID
			insert into Common.ACRA_COBORROWER_QUERY_RESULT_QUERIES
				(APPLICATION_ID,DATE,BANK_NAME)
			select @APPLICATION_ID,DATE,BANK_NAME
				from @COBORROWER_QUERIES

			delete from Common.ACRA_COBORROWER_QUERY_RESULT_INTERRELATED where APPLICATION_ID=@APPLICATION_ID
			insert into Common.ACRA_COBORROWER_QUERY_RESULT_INTERRELATED
				(APPLICATION_ID,FROM_DATE,TO_DATE,CUR,RISK,CONTRACT_AMOUNT,DUE_AMOUNT,OVERDUE_AMOUNT,OUTSTANDING_PERCENT)
			select @APPLICATION_ID,FROM_DATE,TO_DATE,CUR,RISK,CONTRACT_AMOUNT,DUE_AMOUNT,OVERDUE_AMOUNT,OUTSTANDING_PERCENT
				from @COBORROWER_INTERRELATED
		end

		execute Common.sp_ChangeApplicationStatus @APPLICATION_ID,3
	END TRY
	BEGIN CATCH
		ROLLBACK TRANSACTION
		declare @ErrorMessage varchar(4000)
		set @ErrorMessage = ERROR_MESSAGE()
		RAISERROR (@ErrorMessage, 17, 1)
		RETURN
	END CATCH
	COMMIT TRANSACTION
GO
